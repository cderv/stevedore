# Like patch.yaml, but for things that are not inconsistencies in the
# spec.  This is used to add hints to the swagger preparer to keep the
# code there simple, and will be used to add docstrings for arguments
# and methods that are modified in docker_client.R
- path: ["paths", "/containers/{id}/logs", "get"]
  value:
    produces: "application/chunked-string"

# This group is all documentation for the 'filter' parameter
- path: ["paths", "/containers/json", "get", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/containers/prune", "post", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/images/json", "get", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/images/search", "get", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/images/prune", "post", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/events", "get", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/volumes", "get", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/volumes/prune", "post", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/networks", "get", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters

- path: ["paths", "/networks/prune", "post", "parameters", "@name = filters",
  "description"]
  transform: patch_doc_filters
